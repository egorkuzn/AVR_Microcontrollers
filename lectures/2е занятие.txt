В чём трудности программирования микроконтроллеров: у разных производителей разные регистры, нужно адаптироваться.
Atml микроконтроллеры проще осваивать, т.к. проще осваивать, больше литературы. Если освоить текущую серию, потом
 можно STM брать (STM-микроконтроллеры, целый класс). 
 Чкм разрядность определяется?
    * Проще адресация
     * Быстрее операции
 Как правило переферии больше. MEga насыщена переферией. Tiny - если нам это всё обилие не нужно. Ну например счётчик, который
 раз в секунду отправляет сообщение. Но сложное аналоговое фычисление произвести не может. Во-первых ATmega168 - 32 ножки, Tiny
  - 8 ножек. Block Diagram - внутреннее кристалла.
  STM весьма дешёвые, производятся вне зависимости от США, много аналогий, широко распространяются. STM для более серьезных
   приложений и можно писать на Си.
   -------------------
   Начнём. Вот ядро наше, микроконтроллер. Основной центральный узел - ЦПУ (точнее арифм. лог. устройство). Переферия уже вспомогательное.
   Основное взаимодействие на диаграмме. Оперирует общего назначения регистрами. Можно выгружать из ОЗУ. Если сложение умножение
    - верхний 16й регистр. Регистр Х (R26-R27), У (R28-R29), Z(R30 - R31) - для адресации.
    /*16-битная адресация*/


Конкретные регистры можем называть своими именами с помощью макрокоманд.
Названия нужно давать переменным.
Сейчас простые команды, а потом будет жесть.
Стандартов нет, главное, чтобы имена были.

Как удобно, пример: 
    FuncGetVal ; Функция CamelCase крч
    valueOf ; переменная


Комментарии короткие и емкие. Т.к. асеемблер))) 

СТЕК ПРЕРЫВАНИЯ: 
При работе программ возникает желание работать со стеком. Стек 3-уровневый. Стек == "положили-убрали". 
    * PUSH - положить в стек
    * POP - убрать из стека.

Указатель стека 16-битный (если потребуется). Стек - ОЗУ. Call и Rcall. При уходе подпрограмм нужно сохранить значение статусного регистра
и счётчика комманд. Для того это делается, для сохранения состояния ядра на выходе. А когда вернёмся из подпрограммы, нужно возвратить,
 чтобы сохранилось выполнение программы. Обычно в стек пишут.

Организация прерывания. При возникновении события. Если выставлен флаг и настроены соотв. регистры в микроконтроллере, то ...
При выполнении прерывания: если разрешено глобально, то снимается флаг на разрешение, чтобы выполнялось только одно прерывание.
СТатусные регистры помогают восстановить после завершения прерывания. Вот первая структура: example1.

Производительность зависит от устройства процессора. 16  MHZ, 16 миллионов операций в секунду при использовании простых команд и максимальных
настроек. При работе с микроконтроллерами, помимо схемы, внешне задающие системы тактирования. Регистрами настройки можем регулировать настройки
контроллера. Источник таймера может быть разным. Собственно говоря... К тактированию имеют отношение таймеры/счётчики. Достучаться до ОЗУ, время
в тактах: порядка 2х. Но требуется определённая обвязка. а) Адреса загрузить; б) Выполнить операцию. 

Про тактирование... Таймеры счётчики загрузить. АЦП и счётчики в меньшей ст. тактировании. Благодаря ковееру такое большое кол-во операций в секунду.

Иструкции: 
    * EIMSK
    * EIFR

МАКРОКОМАНДЫ: 

.def schtchik = R0; define, именование переменных
.equ time = 5; const
Constant: .db 10;
Word: .dw; 2 байта
Table 